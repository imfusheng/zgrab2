name: Build and Release Binary

on:
  push:
    branches:
      - master
    tags:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build binary
        run: |
          mkdir -p build
          GOOS=${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
          GOARCH=amd64
          OUTPUT_NAME=my_binary${{ GOOS == 'windows' && '.exe' || '' }}
          env GOOS=$GOOS GOARCH=$GOARCH go build -o build/$OUTPUT_NAME

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binary
          path: build/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
